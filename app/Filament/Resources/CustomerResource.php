<?php

namespace App\Filament\Resources;

use App\Filament\Pages\Dashboard;
use App\Filament\Resources\CustomerResource\Pages;
use App\Filament\Resources\CustomerResource\RelationManagers;
use App\Models\Account;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;
use TomatoPHP\FilamentAccounts\Filament\Resources\AccountResource;
use TomatoPHP\FilamentSaasPanel\Filament\Resources\TeamResource\Actions\TeamTableAction;
use TomatoPHP\FilamentSaasPanel\Filament\Resources\TeamResource\Form\TeamComponent;
use TomatoPHP\FilamentUsers\Resources\TeamResource;

class CustomerResource extends AccountResource
{
    protected static ?string $model = Account::class;


    public static function getNavigationLabel(): string
    {
        return "Customers";
    }

    public static function getPluralLabel(): ?string
    {
        return "Customers";
    }

    public static function getLabel(): ?string
    {
        return "Customer";
    }

    public static function form(Form $form): Form
    {
        return $form->schema([
            AccountResource\Form\Components\Name::make(),
            AccountResource\Form\Components\Email::make(),
            AccountResource\Form\Components\Phone::make(),
            TeamComponent::make()->preload()
        ]); // TODO: Change the autogenerated stub
    }

    public static function table(Table $table): Table
    {
        return parent::table($table)->actions([
            Tables\Actions\Action::make('view')
                ->iconButton()
                ->color('info')
                ->icon('heroicon-s-eye')
                ->url(fn($record) => Dashboard::getUrl() . '?search='.$record->phone),

            TeamTableAction::make(),
            AccountResource\Table\Actions\EditAction::make(),
            AccountResource\Table\Actions\DeleteAction::make(),
        ]); // TODO: Change the autogenerated stub
    }

    protected static ?string $navigationIcon = 'bxs-user';

    public static function getEloquentQuery(): Builder
    {
        return parent::getEloquentQuery()->where('type', 'customer'); // TODO: Change the autogenerated stub
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ManageCustomers::route('/'),
        ];
    }
}
